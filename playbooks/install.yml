---
# RKE2/K3S Installation Playbook
# Purpose: Install and configure RKE2 or K3S cluster

# ============================================================================
# Phase 1: Deploy initial Server node (cluster_init=true)
# ============================================================================
- name: Phase 1 - Deploy initial Server node
  hosts: all
  become: yes
  gather_facts: yes
  
  pre_tasks:
    - name: Display initial node information
      debug:
        msg:
          - "=========================================="
          - "Phase 1: Deploy initial Server node"
          - "Target host: {{ inventory_hostname }}"
          - "Cluster type: {{ cluster_type | upper }}"
          - "=========================================="
      when: 
        - node_role == 'server'
        - cluster_init | bool

  roles:
    - role: rancher_cluster
      when:
        - node_role == 'server'
        - cluster_init | bool

  post_tasks:
    - name: Wait for initial node to be ready
      pause:
        seconds: 30
        prompt: "Waiting for initial Server node to be fully ready and generate Token..."
      when:
        - node_role == 'server'
        - cluster_init | bool
      run_once: yes

# ============================================================================
# Phase 2: Deploy other Server nodes
# ============================================================================
- name: Phase 2 - Deploy other Server nodes
  hosts: all
  become: yes
  gather_facts: yes

  pre_tasks:
    - name: Display other Server node information
      debug:
        msg:
          - "=========================================="
          - "Phase 2: Deploy other Server nodes"
          - "Target host: {{ inventory_hostname }}"
          - "=========================================="
      when:
        - node_role == 'server'
        - not (cluster_init | default(false) | bool)

  roles:
    - role: rancher_cluster
      when:
        - node_role == 'server'
        - not (cluster_init | default(false) | bool)

  post_tasks:
    - name: Wait for other Server nodes to be ready
      pause:
        seconds: 30
        prompt: "Waiting for other Server nodes to fully join the cluster..."
      when:
        - node_role == 'server'
        - not (cluster_init | default(false) | bool)
      run_once: yes

# ============================================================================
# Phase 3: Deploy Agent nodes (parallel installation 30%)
# ============================================================================
- name: Phase 3 - Deploy Agent nodes
  hosts: all
  become: yes
  gather_facts: yes
  serial: "30%"  # Install 30% of Agent nodes in parallel each time (minimum 1)

  pre_tasks:
    - name: Display Agent node information
      debug:
        msg:
          - "=========================================="
          - "Phase 3: Deploy Agent nodes"
          - "Target host: {{ inventory_hostname }}"
          - "=========================================="
      when: node_role == 'agent'

  roles:
    - role: rancher_cluster
      when: node_role == 'agent'

  post_tasks:
    - name: Installation completed notification
      debug:
        msg:
          - "=========================================="
          - "âœ“ All nodes installation completed"
          - ""
          - "Cluster nodes:"
          - "  - Initial Server: {{ groups['rke_servers'] | map('extract', hostvars) | selectattr('cluster_init', 'defined') | selectattr('cluster_init') | map(attribute='inventory_hostname') | first }}"
          - "  - Other Servers: {{ groups['rke_servers'] | map('extract', hostvars) | rejectattr('cluster_init', 'defined') | map(attribute='inventory_hostname') | list | join(', ') if groups['rke_servers'] | length > 1 else 'None' }}"
          - "  - Agent nodes: {{ groups['rke_agents'] | join(', ') if groups['rke_agents'] is defined else 'None' }}"
          - ""
          - "Next steps:"
          - "1. On Server node execute: export KUBECONFIG=/etc/rancher/{{ cluster_type }}/{{ cluster_type }}.yaml"
          - "2. Verify node status: kubectl get nodes"
          - "3. View Pod status: kubectl get pods -A"
          - "=========================================="
      run_once: yes
      when: node_role == 'agent'
