---
# RKE2/K3S Upgrade Playbook
# Purpose: Rolling upgrade of RKE2 or K3S cluster

- name: Upgrade Server nodes
  hosts: rke_servers
  become: yes
  gather_facts: yes
  serial: 1  # Upgrade one Server at a time to ensure high availability

  pre_tasks:
    - name: Set global upgrade confirmation flag
      set_fact:
        upgrade_confirmed: true
      run_once: yes
      delegate_to: localhost
      delegate_facts: yes
    - name: Display upgrade information
      debug:
        msg:
          - "=========================================="
          - "Starting Server node upgrade: {{ inventory_hostname }}"
          - "Target version: {{ install_version | default('Latest version', true) }}"
          - "=========================================="

  roles:
    - role: rancher_cluster

  tasks:
    - name: Load cluster-specific variables
      include_vars: "../roles/rancher_cluster/vars/{{ cluster_type }}.yml"

    - name: Set upgrade flag
      set_fact:
        upgrade_cluster: true

    - name: Execute upgrade
      include_role:
        name: rancher_cluster
        tasks_from: upgrade

  post_tasks:
    - name: Wait for node to stabilize
      pause:
        seconds: 30
        prompt: "Waiting for Server node to stabilize before continuing..."

- name: Upgrade Agent nodes
  hosts: rke_agents
  become: yes
  gather_facts: yes
  serial: "80%"  # Upgrade 80% of Agent nodes in parallel each time (minimum 1)

  pre_tasks:
    - name: Set Agent skip confirmation
      set_fact:
        skip_upgrade_confirmation: true
    - name: Display upgrade information
      debug:
        msg:
          - "=========================================="
          - "Starting Agent node upgrade: {{ inventory_hostname }}"
          - "=========================================="

  tasks:
    - name: Load cluster-specific variables
      include_vars: "../roles/rancher_cluster/vars/{{ cluster_type }}.yml"

    - name: Set upgrade flag
      set_fact:
        upgrade_cluster: true

    - name: Execute upgrade
      include_role:
        name: rancher_cluster
        tasks_from: upgrade

  post_tasks:
    - name: Wait for node to stabilize
      pause:
        seconds: 15

- name: Upgrade completion verification
  hosts: rke_servers[0]
  become: yes
  gather_facts: no

  tasks:
    - name: Verify all node status
      shell: |
        export KUBECONFIG=/etc/rancher/{{ cluster_type }}/{{ cluster_type }}.yaml
        kubectl get nodes
      register: final_status
      changed_when: false

    - name: Display final status
      debug:
        msg:
          - "=========================================="
          - "âœ“ Cluster upgrade completed"
          - ""
          - "Node status:"
          - "{{ final_status.stdout_lines | join('\n') }}"
          - "=========================================="
